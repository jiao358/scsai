<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
                        ">
	<bean id="handlerExceptionResolver" class="scsai.cmb.helper.SimpleExceptionHandle">
	</bean>
	<!-- 自动扫描 -->
	<context:component-scan base-package="scsai.cmb" />
	<!-- 引入配置文件 -->
	 <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties" />
	</bean>


<!-- 	<bean id="cmbProperty" class="scsai.cmb.helper.CmbProperty">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean> -->



	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="${driver}" 
		/> <property name="url" value="${url}" /> <property name="username" value="${username}" 
		/> <property name="password" value="${password}" /> 初始化连接大小 <property name="initialSize" 
		value="${initialSize}"></property> 连接池最大数量 <property name="maxActive" value="${maxActive}"></property> 
		连接池最大空闲 <property name="maxIdle" value="${maxIdle}"></property> 连接池最小空闲 <property 
		name="minIdle" value="${minIdle}"></property> 获取连接最大等待时间 com.mysql.jdbc.Driver 
		<property name="maxWait" value="${maxWait}"></property> </bean> -->

	<bean id="dataSourceLocal" name="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="${driver}" />
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="${url}" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${username}" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${password}" />
		<!-- 指定连接池中保留的最大连接数. Default:15 -->
		<!-- <property name="maxPoolSize" value="${maxActive}"/> 指定连接池中保留的最小连接数 
			<property name="minPoolSize" value="${minIdle}"/> 指定连接池的初始化连接数 取值应在minPoolSize 
			与 maxPoolSize 之间.Default:3 <property name="initialPoolSize" value="3"/> 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 
			Default:0 <property name="maxIdleTime" value="${maxWait}"/> 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. 
			Default:3 <property name="acquireIncrement" value="3"/> JDBC的标准,用以控制数据源内加载的PreparedStatements数量。 
			但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0 
			<property name="maxStatements" value="5"/> 每60秒检查所有连接池中的空闲连接.Default:0 <property 
			name="idleConnectionTestPeriod" value="60"/> -->
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceLocal" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:scsai/cmb/datasource/sql/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="scsai.cmb.datasource.inf" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceLocal" />
	</bean>


	<bean id="requsetAop" class="scsai.cmb.aop.RequestAop">
	</bean>

	<aop:config>
		<aop:aspect id="requestAop" ref="requsetAop">
			<!--配置com.spring.service包下所有类或接口的所有方法 -->
			<aop:pointcut id="businessService"
				expression=" ( execution(* scsai.cmb.control.*.get*(..)) or execution(* scsai.cmb.control.*.post*(..)) ) " />
			<aop:around pointcut-ref="businessService" method="filterRequest" />
		</aop:aspect>
	</aop:config>


</beans>  