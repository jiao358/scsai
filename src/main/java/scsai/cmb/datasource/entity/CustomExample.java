package scsai.cmb.datasource.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CustomExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public CustomExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andSexIsNull() {
			addCriterion("SEX is null");
			return (Criteria) this;
		}

		public Criteria andSexIsNotNull() {
			addCriterion("SEX is not null");
			return (Criteria) this;
		}

		public Criteria andSexEqualTo(Integer value) {
			addCriterion("SEX =", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotEqualTo(Integer value) {
			addCriterion("SEX <>", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThan(Integer value) {
			addCriterion("SEX >", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThanOrEqualTo(Integer value) {
			addCriterion("SEX >=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThan(Integer value) {
			addCriterion("SEX <", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThanOrEqualTo(Integer value) {
			addCriterion("SEX <=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexIn(List<Integer> values) {
			addCriterion("SEX in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotIn(List<Integer> values) {
			addCriterion("SEX not in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexBetween(Integer value1, Integer value2) {
			addCriterion("SEX between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotBetween(Integer value1, Integer value2) {
			addCriterion("SEX not between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("NAME is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("NAME is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("NAME =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("NAME <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("NAME >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("NAME >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("NAME <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("NAME <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("NAME like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("NAME not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("NAME in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("NAME not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("NAME between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("NAME not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andCardTypeIsNull() {
			addCriterion("CARD_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andCardTypeIsNotNull() {
			addCriterion("CARD_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andCardTypeEqualTo(Integer value) {
			addCriterion("CARD_TYPE =", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeNotEqualTo(Integer value) {
			addCriterion("CARD_TYPE <>", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeGreaterThan(Integer value) {
			addCriterion("CARD_TYPE >", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("CARD_TYPE >=", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeLessThan(Integer value) {
			addCriterion("CARD_TYPE <", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeLessThanOrEqualTo(Integer value) {
			addCriterion("CARD_TYPE <=", value, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeIn(List<Integer> values) {
			addCriterion("CARD_TYPE in", values, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeNotIn(List<Integer> values) {
			addCriterion("CARD_TYPE not in", values, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeBetween(Integer value1, Integer value2) {
			addCriterion("CARD_TYPE between", value1, value2, "cardType");
			return (Criteria) this;
		}

		public Criteria andCardTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("CARD_TYPE not between", value1, value2, "cardType");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("PHONE is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("PHONE is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(Integer value) {
			addCriterion("PHONE =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(Integer value) {
			addCriterion("PHONE <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(Integer value) {
			addCriterion("PHONE >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(Integer value) {
			addCriterion("PHONE >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(Integer value) {
			addCriterion("PHONE <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(Integer value) {
			addCriterion("PHONE <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<Integer> values) {
			addCriterion("PHONE in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<Integer> values) {
			addCriterion("PHONE not in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneBetween(Integer value1, Integer value2) {
			addCriterion("PHONE between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotBetween(Integer value1, Integer value2) {
			addCriterion("PHONE not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andCardNumbIsNull() {
			addCriterion("CARD_NUMB is null");
			return (Criteria) this;
		}

		public Criteria andCardNumbIsNotNull() {
			addCriterion("CARD_NUMB is not null");
			return (Criteria) this;
		}

		public Criteria andCardNumbEqualTo(String value) {
			addCriterion("CARD_NUMB =", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbNotEqualTo(String value) {
			addCriterion("CARD_NUMB <>", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbGreaterThan(String value) {
			addCriterion("CARD_NUMB >", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbGreaterThanOrEqualTo(String value) {
			addCriterion("CARD_NUMB >=", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbLessThan(String value) {
			addCriterion("CARD_NUMB <", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbLessThanOrEqualTo(String value) {
			addCriterion("CARD_NUMB <=", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbLike(String value) {
			addCriterion("CARD_NUMB like", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbNotLike(String value) {
			addCriterion("CARD_NUMB not like", value, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbIn(List<String> values) {
			addCriterion("CARD_NUMB in", values, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbNotIn(List<String> values) {
			addCriterion("CARD_NUMB not in", values, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbBetween(String value1, String value2) {
			addCriterion("CARD_NUMB between", value1, value2, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andCardNumbNotBetween(String value1, String value2) {
			addCriterion("CARD_NUMB not between", value1, value2, "cardNumb");
			return (Criteria) this;
		}

		public Criteria andAddressIsNull() {
			addCriterion("ADDRESS is null");
			return (Criteria) this;
		}

		public Criteria andAddressIsNotNull() {
			addCriterion("ADDRESS is not null");
			return (Criteria) this;
		}

		public Criteria andAddressEqualTo(String value) {
			addCriterion("ADDRESS =", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotEqualTo(String value) {
			addCriterion("ADDRESS <>", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThan(String value) {
			addCriterion("ADDRESS >", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressGreaterThanOrEqualTo(String value) {
			addCriterion("ADDRESS >=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThan(String value) {
			addCriterion("ADDRESS <", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLessThanOrEqualTo(String value) {
			addCriterion("ADDRESS <=", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressLike(String value) {
			addCriterion("ADDRESS like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotLike(String value) {
			addCriterion("ADDRESS not like", value, "address");
			return (Criteria) this;
		}

		public Criteria andAddressIn(List<String> values) {
			addCriterion("ADDRESS in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotIn(List<String> values) {
			addCriterion("ADDRESS not in", values, "address");
			return (Criteria) this;
		}

		public Criteria andAddressBetween(String value1, String value2) {
			addCriterion("ADDRESS between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andAddressNotBetween(String value1, String value2) {
			addCriterion("ADDRESS not between", value1, value2, "address");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNull() {
			addCriterion("CREATE_DATE is null");
			return (Criteria) this;
		}

		public Criteria andCreateDateIsNotNull() {
			addCriterion("CREATE_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andCreateDateEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE =", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <>", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE >=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThan(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("CREATE_DATE <=", value, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_DATE in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("CREATE_DATE not in", values, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andCreateDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("CREATE_DATE not between", value1, value2, "createDate");
			return (Criteria) this;
		}

		public Criteria andOpDateIsNull() {
			addCriterion("OP_DATE is null");
			return (Criteria) this;
		}

		public Criteria andOpDateIsNotNull() {
			addCriterion("OP_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andOpDateEqualTo(Date value) {
			addCriterionForJDBCDate("OP_DATE =", value, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("OP_DATE <>", value, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateGreaterThan(Date value) {
			addCriterionForJDBCDate("OP_DATE >", value, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("OP_DATE >=", value, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateLessThan(Date value) {
			addCriterionForJDBCDate("OP_DATE <", value, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("OP_DATE <=", value, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateIn(List<Date> values) {
			addCriterionForJDBCDate("OP_DATE in", values, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("OP_DATE not in", values, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("OP_DATE between", value1, value2, "opDate");
			return (Criteria) this;
		}

		public Criteria andOpDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("OP_DATE not between", value1, value2, "opDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table CUSTOM
	 * @mbg.generated  Sun Apr 02 01:47:30 GMT+08:00 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CUSTOM
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 02 00:07:46 GMT+08:00 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}